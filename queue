# p4 python // queue 
# DECLARE Names : ARRAY [0:9] OF STRING
Names = [""] * 10
HeadPointer = -1
TailPointer = 0

def Enqueue(Data):
    global Names
    global HeadPointer
    global TailPointer
    if TailPointer < 10:
        Names[TailPointer] = Data
        TailPointer = TailPointer + 1

        if HeadPointer == -1:
            HeadPointer = 0
    else:
        print("queue is full")

def Dequeue():
    global Names
    global HeadPointer
    global TailPointer

    if HeadPointer == -1:
        print("queue is empty")
    else:
        item = Names[HeadPointer]
        HeadPointer = HeadPointer + 1
        print(item)

    if HeadPointer == TailPointer:
        TailPointer = 0
        HeadPointer = -1

Enqueue("mishi")
print(Names)
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------
# circular queue
# DECLARE QueueArray : ARRAY [0:9] OF STRING
global headpointer
global tailpointer
global NumberOfItems
headpointer = 0
tailpointer = 0
NumberOfItems = 0
QueueArray = [""] * 10

# cant pass byref values as parameter so have declared them as global
def enqueue(DataToAdd):
    global QueueArray
    global NumberOfItems
    global headpointer
    global tailpointer

    if NumberOfItems >= 10:
        return False

    QueueArray[tailpointer] = DataToAdd
    if tailpointer >= 9:
        tailpointer = 0
    else:
        tailpointer = tailpointer + 1
    NumberOfItems = NumberOfItems + 1
    return True

def dequeue():
    global NumberOfItems
    global QueueArray
    global tailpointer
    global headpointer
    if NumberOfItems == 0:
        return False
    else:
        value = QueueArray[headpointer]
        headpointer = headpointer + 1
        if headpointer > 9:
            headpointer = 0

        NumberOfItems = NumberOfItems - 1
        return value
enqueue("A")
enqueue("B")
enqueue("C")
dequeue()
print(QueueArray)
print(NumberOfItems)
print("tailpointer: ", tailpointer)
print("headpointer: ", headpointer)
