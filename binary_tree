# p4 python // binary tree
FreeNode = 6
RootPointer = 0
BinaryTree = [[1, 20, 5], [2, 15, -1], [-1, 3, 3], [-1, 9, 4], [-1, 10, -1], [-1, 58, -1], [-1, -1, -1]]

def InOrder(Root):
    global BinaryTree
    if BinaryTree[Root][0] != -1:
        InOrder(BinaryTree[Root][0])
    print(BinaryTree[Root][1])
    if BinaryTree[Root][2] != -1:
        InOrder(BinaryTree[Root][2])

InOrder(RootPointer)

def PreOrder(Root):
    global BinaryTree
    print(BinaryTree[Root][1])
    if BinaryTree[Root][0] != -1:
        PreOrder(BinaryTree[Root][0])
    if BinaryTree[Root][2] != -1:
        PreOrder(BinaryTree[Root][2])

def PostOrder(Root):
    global BinaryTree
    if BinaryTree[Root][0] != -1:
        PostOrder(BinaryTree[Root][0])
    if BinaryTree[Root][2] != -1:
        PostOrder(BinaryTree[Root][2])
    print(BinaryTree[Root][1])


# practice question
# DECLARE ArrayNodes : ARRAY [0:19, 0:2] OF INTEGER
global ArrayNodes
global FreeNode
global RootPointer
ArrayNodes = []
for x in range(20):
    ArrayNodes.append([-1, -1, -1])
FreeNode = 6
RootPointer = 0

ArrayNodes[0][0] = 1
ArrayNodes[0][1] = 20
ArrayNodes[0][2] = 5

ArrayNodes[1][0] = 2
ArrayNodes[1][1] = 15
ArrayNodes[1][2] = -1

ArrayNodes[2][0] = -1
ArrayNodes[2][1] = 3
ArrayNodes[2][2] = 3

ArrayNodes[3][0] = -1
ArrayNodes[3][1] = 9
ArrayNodes[3][2] = 4

ArrayNodes[4][0] = -1
ArrayNodes[4][1] = 10
ArrayNodes[4][2] = -1

ArrayNodes[5][0] = -1
ArrayNodes[5][1] = 58
ArrayNodes[5][2] = -1

ArrayNodes[6][0] = -1
ArrayNodes[6][1] = -1
ArrayNodes[6][2] = -1

def SearchValue(Root, ValueToFind):
    global ArrayNodes
    if Root == -1:
        return -1
    elif ArrayNodes[Root][1] == ValueToFind:
        return Root
    elif ArrayNodes[Root][1] == -1:
        return -1

    if ArrayNodes[Root][1] > ValueToFind:
        return SearchValue(ArrayNodes[Root][0], ValueToFind)
    if ArrayNodes[Root][1] < ValueToFind:
        return SearchValue(ArrayNodes[Root][2], ValueToFind)

def PostOrder(Root):
    global ArrayNodes
    if ArrayNodes[Root][0] != -1:
        PostOrder(ArrayNodes[Root][0])
    if ArrayNodes[Root][2] != -1:
        PostOrder(ArrayNodes[Root][2])
    print(ArrayNodes[Root][1])

temp = SearchValue(RootPointer, 15)
if temp != -1:
    print("index location: ", temp)
else:
    print("value not found")

PostOrder(RootPointer)



